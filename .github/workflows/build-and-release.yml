name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  # build-windows:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.21' # Replace with your Go version
  #     - name: Tidy Go modules
  #       run: go mod tidy
  #     - name: Build binary for Windows
  #       run: |
  #         $env:GOOS = "windows"
  #         $env:GOARCH = "amd64"
  #         go build -o confluence_cli-windows.exe
  #       shell: powershell
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: confluence_cli-windows
  #         path: confluence_cli-windows.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Replace with your Go version
      - name: Tidy Go modules
        run: go mod tidy
      - name: Build binary for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o confluence_cli
      - name: Upload artifact Linux
        uses: actions/upload-artifact@v3
        with:
          name: confluence-cli
          path: confluence_cli

  create-release:
    # needs: [build-windows, build-linux]
    needs: [build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: confluence-cli
      - name: Display structure of downloaded files
        run: ls -la
      # - name: Create Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     token: ${{ secrets.MY_GITHUB_TOKEN }}
      #     artifacts: "artifacts/confluence_cli"
      #     tag: ${{ github.ref_name }}
      #     name: "Release ${{ github.ref_name }}"
      #     draft: false
      #     prerelease: false
